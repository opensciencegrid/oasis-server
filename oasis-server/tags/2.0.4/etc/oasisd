#!/bin/bash
#
#	/etc/rc.d/init.d/oasis
#
# Starts the OASIS daemon
#
# chkconfig: 2345 90 60 
# description: run probes and publishing files for OASIS
# processname: oasis 
# config: /etc/oasis/oasis.conf 
# pidfile: /var/run/oasis.pid
#
#

### BEGIN INIT INFO
# Provides: oasisAPI.py
# Required-Start: $syslog $local_fs
# Required-Stop: $syslog $local_fs
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop OASIS daemon
# Description: run probes and publishing files for OASIS
### END INIT INFO

f_dir(){
    # little function to find out where actually
    # this script is located.
    # In case of an user custom installation it could
    # be in a place different that both /etc/init.d/ or the $HOME dir.
    # The current location is recorded in variable OASISDIR
    
    OLD_DIR=$PWD
    DIRPATH=`dirname $0`
    cd $DIRPATH
    OASISDIR=$PWD
    cd $OLD_DIR
}

# Source function library.
# Standard RedHat
if [ -f /etc/rc.d/init.d/functions ]; then
   . /etc/rc.d/init.d/functions
fi

# Use LSB locations for e.g. SuSE
if [ -f /lib/lsb/init-functions ]; then
   . /lib/lsb/init-functions
fi

# Source standard environment
for i in /etc/profile.d/*.sh; do
    if [ -r "$i" ]; then
            . $i >/dev/null 2>&1
    fi
done

# Determine usage context and set paths accordingly.  
#   -- for root it means RPM
#   -- for non-root, the head of the path tree can be calculated from the output of f_oasisdir
#      the relative paths for the rest of files are like ../bin, ../var, etc.
#      In case of non-root, it cannot be a regular user. 
#      It should be a special dedicated user, i.e. 'oasis'

f_dir

if [ `id -u` = 0 ]; then
    OASISHEAD=/
    SYSCONF=/etc/sysconfig/oasis
    BINDIR=/usr/bin
    ETCDIR=/etc/oasis
    PIDFILE=/var/run/oasisd.pid
else
    OASISHEAD=`dirname $OASISDIR`

    SYSCONF=$OASISHEAD/etc/oasis
    BINDIR=$OASISHEAD/bin
    ETCDIR=$OASISHEAD/etc
    PIDFILE=$OASISHEAD/var/run/oasisd.pid
fi

CONFFILE=$ETCDIR/oasis.conf

# Source settings from sysconfig
# overriding default if present

if [ -f $SYSCONF ]; then
   . $SYSCONF
fi

if [ -f /etc/profile ]; then
   . /etc/profile
fi


RETVAL=0
#
# See how we were called.
#
check() {
	
	# Check if oasis is executable
	test -x $BINDIR/oasisd || exit 5
}

create_var_run(){
    # function to create directory  $OASISHEAD/var/run 
    # if it does not exist. 
    # It is needed to place the file oasis.pid 
    if [ ! -d $OASISHEAD/var/run/ ]; then
        mkdir -p $OASISHEAD/var/run/
    fi
}

create_var_log(){
    # function to create directory  $OASISHEAD/var/log/oasis
    # if it does not exist. 
    if [ ! -d $OASISHEAD/var/log/oasis ]; then
        mkdir -p $OASISHEAD/var/log/oasis/
    fi
}


start() {
	# Check if it is already running
	PROGRETVAL=0
	if [ ! -f $PIDFILE ]; then
		echo -n $"Starting OASIS daemon: "	
        create_var_run
        create_var_log
	    # daemon --pidfile=${PIDFILE} "$BINDIR/oasisd --conf $CONFFILE $OPTIONS "
        if [ -n "$CONSOLE_LOG" ]; then
        	#$BINDIR/oasisd --conf $CONFFILE $OPTIONS >> $CONSOLE_LOG 2>&1 &
        	$BINDIR/oasisd $OPTIONS >> $CONSOLE_LOG 2>&1 &
        else
            #$BINDIR/oasisd --conf $CONFFILE $OPTIONS &
            $BINDIR/oasisd $OPTIONS &
        fi
        RETVAL=$?
		PID=$!
	    [ "$RETVAL" -eq 0 ] && echo $! > $PIDFILE        

		sleep 3
		if checkpid $PID; then
			PROGRETVAL=0
		else
			wait $PID
			PROGRETVAL=$?
			rm -f $PIDFILE
		fi
        [ "$PROGRETVAL" -eq 0 ] && success $"oasisd startup" || failure $"oasisd startup"
	    echo
	else
		if checkpid $PID; then
			echo "$0: daemon with PID $PID already running." && success $"oasisd startup"
			PROGRETVAL=0
		else
			echo "$0: daemon dead but PID file exists: $PIDFILE" && failure $"oasisd startup"
	    	PROGRETVAL=1
	    fi
	fi

	return $PROGRETVAL
}

stop() {

	check
	echo -n $"Stopping OASIS daemon: "
	killproc -p $PIDFILE oasisd
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f $PIDFILE && success $"oasisd shutdown" || failure $"oasisd shutdown"
	echo
    return $RETVAL
}


restart() {
	stop
	sleep 2
	start
	RETVAL=$?
	return $RETVAL
}	

case "$1" in
start)
    start
    RETVAL=$?
    ;;
stop)
    stop
    RETVAL=$?
    ;;
restart)
	restart
	RETVAL=$?
	;;
condrestart)
	if [ -f /var/lock/subsys/oasisd ]; then
	    restart
	fi
	RETVAL=$?
	;;
status)
	status oasisd
	RETVAL=$?
	;;
*)
	echo $"Usage: $0 {start|stop|status|restart|condrestart}"
	RETVAL=2
esac

exit $RETVAL
