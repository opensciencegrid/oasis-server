#!/bin/bash
# Install and configure all application software on oasis-replica
# Written by Dave Dykstra 2-4-2015

ARCH=`arch`
PATH="$PATH:/sbin"
set -ex
# download, build, and install aufs
wget -N "http://ftp.scientificlinux.org/linux/scientific/5x/SRPMS/SL/aufs-0.20090202.cvs-6.sl5.src.rpm"
mkdir -p /usr/src/redhat/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
rpm -i aufs-0.20090202.cvs-6.sl5.src.rpm
rm -f aufs-0.20090202.cvs-6.sl5.src.rpm
yum install -y rpm-build kernel-devel-`uname -r` gcc
rpmbuild -ba --target $ARCH --define "kernel `uname -r`" /usr/src/redhat/SPECS/aufs.spec
rpm -iv /usr/src/redhat/RPMS/$ARCH/*aufs*.rpm

# upgrade to osg 3.2
OSGREL=osg-3.2-el5-release-latest.rpm
wget -N http://repo.grid.iu.edu/osg/3.2/$OSGREL
rpm -Uv $OSGREL
rm -f $OSGREL

# install cvmfs
CVREV=2.1.20
CVCONF=cvmfs-config-default-1.0-1
wget -N https://ecsft.cern.ch/dist/cvmfs/cvmfs-$CVREV/cvmfs-$CVREV-1.el5.$ARCH.rpm
wget -N https://ecsft.cern.ch/dist/cvmfs/cvmfs-$CVREV/cvmfs-server-$CVREV-1.el5.$ARCH.rpm
wget -N https://ecsft.cern.ch/dist/cvmfs/cvmfs-config/$CVCONF.noarch.rpm
CVRPMS="cvmfs-server-$CVREV-1.el5.$ARCH.rpm cvmfs-$CVREV-1.el5.$ARCH.rpm $CVCONF.noarch.rpm"
# TODO: the --nogpgcheck is temporary until cvmfs-config-default is signed
yum -y install --nogpgcheck $CVRPMS
rm -f $CVRPMS
cp /etc/cvmfs/keys/egi.eu/egi.eu.pub /etc/cvmfs/keys
cp /etc/cvmfs/keys/opensciencegrid.org/opensciencegrid.org.pub /etc/cvmfs/keys
yum -y install mod_wsgi

echo -e "*\t\t-\tnofile\t\t16384" >>/etc/security/limits.conf
ulimit -n 16384
cat >/etc/logrotate.d/cvmfs <<xEOFx
/var/log/cvmfs/*.log {
    weekly
    missingok
    notifempty
}
xEOFx
cat >/etc/httpd/conf.d/cvmfs.conf <<"xEOFx"
Listen 8080
KeepAlive On
RewriteEngine On
RewriteRule ^/cvmfs/([^./]*)/(.*)$ /cvmfs/$1.opensciencegrid.org/$2
RewriteRule ^/cvmfs/([^/]+)/api/(.*)$ /cvmfs/$1/api/$2 [PT]
RewriteRule ^/cvmfs/(.*)$ /srv/cvmfs/$1
<Directory "/srv/cvmfs"> 
    Options -MultiViews FollowSymLinks -Indexes
    AllowOverride All 
    Order allow,deny 
    Allow from all

    EnableMMAP Off 
    EnableSendFile Off

    AddType application/x-cvmfs .cvmfspublished .cvmfswhitelist

    Header unset Last-Modified
    FileETag None

    ExpiresActive On
    ExpiresDefault "access plus 3 days" 
    ExpiresByType text/html "access plus 15 minutes" 
    ExpiresByType application/x-cvmfs "access plus 2 minutes"
</Directory>

WSGIDaemonProcess cvmfs-api processes=2 display-name=%{GROUP} \
    python-path=/usr/share/cvmfs-server/webapi
WSGIProcessGroup cvmfs-api
WSGISocketPrefix /var/run/wsgi
WSGIScriptAliasMatch /cvmfs/([^/]+)/api /var/www/wsgi-scripts/cvmfs-api.wsgi/$1
xEOFx
chkconfig httpd on
service httpd start

# install frontier-squid & frontier-awstats
rpm -i http://frontier.cern.ch/dist/rpms/RPMS/noarch/frontier-release-1.1-1.noarch.rpm
yum -y install frontier-awstats
cat >/etc/squid/customize.sh <<"xEOFx"
#!/bin/bash

awk --file `dirname $0`/customhelps.awk --source '{

# cache only api calls
insertline("^http_access deny all", "acl CVMFSAPI urlpath_regex ^/cvmfs/[^/]*/api/")
insertline("^http_access deny all", "cache deny !CVMFSAPI")

# port 80 is also supported, through an iptables redirect
setoption("http_port", "8000 accel defaultsite=localhost:8080")
insertline("^http_port", "cache_peer localhost parent 8080 0 no-query originserver")

# allow incoming http accesses from anywhere
# all requests will be forwarded to the originserver
commentout("http_access allow NET_LOCAL")
insertline("^http_access deny all", "http_access allow all")

# do not let squid cache DNS entries more than 5 minutes
setoption("positive_dns_ttl", "5 minutes")

# set shutdown_lifetime to 0 to avoid giving new connections error 
# codes, which get cached upstream
setoption("shutdown_lifetime", "0 seconds")

# turn off collapsed_forwarding to prevent slow clients from slowing down faster ones
setoption("collapsed_forwarding", "off")

print
}'
xEOFx
chmod +x /etc/squid/customize.sh
cat >/etc/iptables.d/60-local-cvmfs <<"xEOFx"
. /etc/iptables.d/setup
$ITNAPRE4 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8000
$ITNAO4 -o lo -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8000
xEOFx
chmod +x /etc/iptables.d/60-local-cvmfs
service gociptables restart
chkconfig frontier-squid on
service frontier-squid start
mkdir -p /srv

# install oasis
yum -y install --enablerepo=osg-development oasis

# add cvmfs replicas
ln -s /net/nas01/srv/`uname -n|cut -d. -f1`/cvmfs /srv
# need nfslock for the repos to be on NFS
chkconfig nfslock on
service nfslock start
REPOURLS="http://oasis.opensciencegrid.org:8000/cvmfs/oasis.opensciencegrid.org"
REPOURLS="$REPOURLS http://cvmfs-stratum0.gridpp.rl.ac.uk:8000/cvmfs/config-egi.egi.eu"
REPOURLS="$REPOURLS `print_osg_repos -u`"
for URL in $REPOURLS; do
    REPO="`basename $URL`"
    if [ -d /srv/cvmfs/$REPO ]; then
	mv /srv/cvmfs/$REPO /srv/cvmfs/.$REPO.ins
    fi
    if [ "$REPO" = "oasis.opensciencegrid.org" ]; then
	cvmfs_server add-replica -o root $URL /etc/cvmfs/keys/opensciencegrid.org.pub
	rm /etc/httpd/conf.d/cvmfs.$REPO.conf
    else
	add_osg_repository -a "$URL"
    fi
    if [ -d /srv/cvmfs/.$REPO.ins ]; then
	rm -rf /srv/cvmfs/$REPO
	mv /srv/cvmfs/.$REPO.ins /srv/cvmfs/$REPO
    fi
done

# add cron entries
mkdir -p /var/log/cvmfs
cat >>/etc/cron.d/cvmfs <<'xEOFx'
0,15,30,45 * * * * root (test -d /srv/cvmfs || exit;for r in `cd /srv/cvmfs;echo *.*`; do echo; if [ -f /srv/cvmfs/$r/.cvmfspublished ]; then echo "Starting $r at `date`";if ! cvmfs_server snapshot $r;then echo "ERROR from cvmfs_server!"; fi;echo "Finished $r at `date`";fi;done) >>/var/log/cvmfs/updates.log 2>&1
5 * * * * root     PATH=$PATH:/usr/sbin generate_replicas >>/var/log/cvmfs/generate_replicas.log 2>&1
0 9 * * * root     find /srv/cvmfs/*.*/data/txn -name "*.*" -mtime +2 2>/dev/null|xargs rm -f
xEOFx

# do initial snapshots for those repos that need it
for URL in $REPOURLS; do
    REPO="`basename $URL`"
    if [ ! -f /srv/cvmfs/$REPO/.cvmfspublished ]; then
	cvmfs_server snapshot $REPO
    fi
done
